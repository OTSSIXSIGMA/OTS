/*
 * Shadowbox.js, version 3.0.3
 * http://shadowbox-js.com/
 *
 * Copyright 2007-2010, Michael J. I. Jackson
 * Date: 2010-10-21 05:33:39 +0000
 */
(function (e, t) { function v() { var e = n.errorInfo, t = n.plugins, r, s, o, u, a, f, l, c; for (var h = 0; h < n.gallery.length; ++h) { r = n.gallery[h]; s = false; o = null; switch (r.player) { case "flv": case "swf": if (!t.fla) { o = "fla" } break; case "qt": if (!t.qt) { o = "qt" } break; case "wmp": if (n.isMac) { if (t.qt && t.f4m) { r.player = "qt" } else { o = "qtf4m" } } else { if (!t.wmp) { o = "wmp" } } break; case "qtwmp": if (t.qt) { r.player = "qt" } else { if (t.wmp) { r.player = "wmp" } else { o = "qtwmp" } } break } if (o) { if (n.options.handleUnsupported == "link") { switch (o) { case "qtf4m": a = "shared"; f = [e.qt.url, e.qt.name, e.f4m.url, e.f4m.name]; break; case "qtwmp": a = "either"; f = [e.qt.url, e.qt.name, e.wmp.url, e.wmp.name]; break; default: a = "single"; f = [e[o].url, e[o].name] } r.player = "html"; r.content = '<div class="sb-message">' + N(n.lang.errors[a], f) + "</div>" } else { s = true } } else { if (r.player == "inline") { u = i.exec(r.content); if (u) { l = k(u[1]); if (l) { r.content = l.innerHTML } else { s = true } } else { s = true } } else { if (r.player == "swf" || r.player == "flv") { c = r.options && r.options.flashVersion || n.options.flashVersion; if (n.flash && !n.flash.hasFlashPlayerVersion(c)) { r.width = 310; r.height = 177 } } } } if (s) { n.gallery.splice(h, 1); if (h < n.current) { --n.current } else { if (h == n.current) { n.current = h > 0 ? h - 1 : h } } --h } } } function m(e) { if (!n.options.enableKeys) { return } (e ? B : j)(document, "keydown", g) } function g(e) { if (e.metaKey || e.shiftKey || e.altKey || e.ctrlKey) { return } var t = H(e), r; switch (t) { case 81: case 88: case 27: r = n.close; break; case 37: r = n.previous; break; case 39: r = n.next; break; case 32: r = typeof d == "number" ? n.pause : n.play; break } if (r) { P(e); r() } } function y(e) { m(false); var t = n.getCurrent(); var r = t.player == "inline" ? "html" : t.player; if (typeof n[r] != "function") { throw "unknown player " + r } if (e) { n.player.remove(); n.revertOptions(); n.applyOptions(t.options || {}) } n.player = new n[r](t, n.playerId); if (n.gallery.length > 1) { var i = n.gallery[n.current + 1] || n.gallery[0]; if (i.player == "img") { var s = new Image; s.src = i.content } var o = n.gallery[n.current - 1] || n.gallery[n.gallery.length - 1]; if (o.player == "img") { var u = new Image; u.src = o.content } } n.skin.onLoad(e, b) } function b() { if (!f) { return } if (typeof n.player.ready != "undefined") { var e = setInterval(function () { if (f) { if (n.player.ready) { clearInterval(e); e = null; n.skin.onReady(w) } } else { clearInterval(e); e = null } }, 10) } else { n.skin.onReady(w) } } function w() { if (!f) { return } n.player.append(n.skin.body, n.dimensions); n.skin.onShow(E) } function E() { if (!f) { return } if (n.player.onLoad) { n.player.onLoad() } n.options.onFinish(n.getCurrent()); if (!n.isPaused()) { n.play() } m(true) } function S() { return (new Date).getTime() } function x(e, t) { for (var n in t) { e[n] = t[n] } return e } function T(e, t) { var n = 0, r = e.length; for (var i = e[0]; n < r && t.call(i, n, i) !== false; i = e[++n]) { } } function N(e, t) { return e.replace(/\{(\w+?)\}/g, function (e, n) { return t[n] }) } function C() { } function k(e) { return document.getElementById(e) } function L(e) { e.parentNode.removeChild(e) } function M() { var e = document.body, t = document.createElement("div"); A = typeof t.style.opacity === "string"; t.style.position = "fixed"; t.style.margin = 0; t.style.top = "20px"; e.appendChild(t, e.firstChild); O = t.offsetTop == 20; e.removeChild(t) } function _(e) { return e.target } function D(e) { return [e.pageX, e.pageY] } function P(e) { e.preventDefault() } function H(e) { return e.keyCode } function B(e, t, n) { jQuery(e).bind(t, n) } function j(e, t, n) { jQuery(e).unbind(t, n) } function q() { if (F) { return } try { document.documentElement.doScroll("left") } catch (e) { setTimeout(q, 1); return } n.load() } function R() { if (document.readyState === "complete") { return n.load() } if (document.addEventListener) { document.addEventListener("DOMContentLoaded", I, false); e.addEventListener("load", n.load, false) } else { if (document.attachEvent) { document.attachEvent("onreadystatechange", I); e.attachEvent("onload", n.load); var t = false; try { t = e.frameElement === null } catch (r) { } if (document.documentElement.doScroll && t) { q() } } } } function J(e) { n.open(this); if (n.gallery.length) { P(e) } } function et() { G = { x: 0, y: 0, startX: null, startY: null } } function tt() { var e = n.dimensions; x(Y.style, { height: e.innerHeight + "px", width: e.innerWidth + "px" }) } function nt() { et(); var e = ["position:absolute", "cursor:" + (n.isGecko ? "-moz-grab" : "move"), "background-color:" + (n.isIE ? "#fff;filter:alpha(opacity=0)" : "transparent")].join(";"); n.appendHTML(n.skin.body, '<div id="' + Q + '" style="' + e + '"></div>'); Y = k(Q); tt(); B(Y, "mousedown", it) } function rt() { if (Y) { j(Y, "mousedown", it); L(Y); Y = null } Z = null } function it(e) { P(e); var t = D(e); G.startX = t[0]; G.startY = t[1]; Z = k(n.player.id); B(document, "mousemove", st); B(document, "mouseup", ot); if (n.isGecko) { Y.style.cursor = "-moz-grabbing" } } function st(e) { var t = n.player, r = n.dimensions, i = D(e); var s = i[0] - G.startX; G.startX += s; G.x = Math.max(Math.min(0, G.x + s), r.innerWidth - t.width); var o = i[1] - G.startY; G.startY += o; G.y = Math.max(Math.min(0, G.y + o), r.innerHeight - t.height); x(Z.style, { left: G.x + "px", top: G.y + "px" }) } function ot() { j(document, "mousemove", st); j(document, "mouseup", ot); if (n.isGecko) { Y.style.cursor = "-moz-grab" } } function vt(e, t, r, i, s) { var o = t == "opacity", u = o ? n.setOpacity : function (e, n) { e.style[t] = "" + n + "px" }; if (i == 0 || !o && !n.options.animate || o && !n.options.animateFade) { u(e, r); if (s) { s() } return } var a = parseFloat(n.getStyle(e, t)) || 0; var f = r - a; if (f == 0) { if (s) { s() } return } i *= 1e3; var l = S(), c = n.ease, h = l + i, p; var d = setInterval(function () { p = S(); if (p >= h) { clearInterval(d); d = null; u(e, r); if (s) { s() } } else { u(e, a + c((p - l) / i) * f) } }, 10) } function mt() { ct.style.height = n.getWindowSize("Height") + "px"; ct.style.width = n.getWindowSize("Width") + "px" } function gt() { ct.style.top = document.documentElement.scrollTop + "px"; ct.style.left = document.documentElement.scrollLeft + "px" } function yt(e) { if (e) { T(ft, function (e, t) { t[0].style.visibility = t[1] || "" }) } else { ft = []; T(n.options.troubleElements, function (e, t) { T(document.getElementsByTagName(t), function (e, t) { ft.push([t, t.style.visibility]); t.style.visibility = "hidden" }) }) } } function bt(e, t) { var n = k("sb-nav-" + e); if (n) { n.style.display = t ? "" : "none" } } function wt(e, t) { var r = k("sb-loading"), i = n.getCurrent().player, s = i == "img" || i == "html"; if (e) { n.setOpacity(r, 0); r.style.display = "block"; var o = function () { n.clearOpacity(r); if (t) { t() } }; if (s) { vt(r, "opacity", 1, n.options.fadeDuration, o) } else { o() } } else { var o = function () { r.style.display = "none"; n.clearOpacity(r); if (t) { t() } }; if (s) { vt(r, "opacity", 0, n.options.fadeDuration, o) } else { o() } } } function Et(e) { var t = n.getCurrent(); k("sb-title-inner").innerHTML = t.title || ""; var r, i, s, o, u; if (n.options.displayNav) { r = true; var a = n.gallery.length; if (a > 1) { if (n.options.continuous) { i = u = true } else { i = a - 1 > n.current; u = n.current > 0 } } if (n.options.slideshowDelay > 0 && n.hasNext()) { o = !n.isPaused(); s = !o } } else { r = i = s = o = u = false } bt("close", r); bt("next", i); bt("play", s); bt("pause", o); bt("previous", u); var f = ""; if (n.options.displayCounter && n.gallery.length > 1) { var a = n.gallery.length; if (n.options.counterType == "skip") { var l = 0, c = a, h = parseInt(n.options.counterLimit) || 0; if (h < a && h > 2) { var p = Math.floor(h / 2); l = n.current - p; if (l < 0) { l += a } c = n.current + (h - p); if (c > a) { c -= a } } while (l != c) { if (l == a) { l = 0 } f += '<a onclick="Shadowbox.change(' + l + ');"'; if (l == n.current) { f += ' class="sb-counter-current"' } f += ">" + ++l + "</a>" } } else { f = [n.current + 1, n.lang.of, a].join(" ") } } k("sb-counter").innerHTML = f; e() } function St(e) { var t = k("sb-title-inner"), n = k("sb-info-inner"), r = .35; t.style.visibility = n.style.visibility = ""; if (t.innerHTML != "") { vt(t, "marginTop", 0, r) } vt(n, "marginTop", 0, r, e) } function xt(e, t) { var n = k("sb-title"), r = k("sb-info"), i = n.offsetHeight, s = r.offsetHeight, o = k("sb-title-inner"), u = k("sb-info-inner"), a = e ? .35 : 0; vt(o, "marginTop", i, a); vt(u, "marginTop", s * -1, a, function () { o.style.visibility = u.style.visibility = "hidden"; t() }) } function Tt(e, t, r, i) { var s = k("sb-wrapper-inner"), o = r ? n.options.resizeDuration : 0; vt(pt, "top", t, o); vt(s, "height", e, o, i) } function Nt(e, t, r, i) { var s = r ? n.options.resizeDuration : 0; vt(pt, "left", t, s); vt(pt, "width", e, s, i) } function Ct(e, t) { var r = k("sb-body-inner"), e = parseInt(e), t = parseInt(t), i = pt.offsetHeight - r.offsetHeight, s = pt.offsetWidth - r.offsetWidth, o = ht.offsetHeight, u = ht.offsetWidth, a = parseInt(n.options.viewportPadding) || 20, f = n.player && n.options.handleOversize != "drag"; return n.setDimensions(e, t, o, u, i, s, a, f) } var n = { version: "3.0.3" }; var r = navigator.userAgent.toLowerCase(); if (r.indexOf("windows") > -1 || r.indexOf("win32") > -1) { n.isWindows = true } else { if (r.indexOf("macintosh") > -1 || r.indexOf("mac os x") > -1) { n.isMac = true } else { if (r.indexOf("linux") > -1) { n.isLinux = true } } } n.isIE = r.indexOf("msie") > -1; n.isIE6 = r.indexOf("msie 6") > -1; n.isIE7 = r.indexOf("msie 7") > -1; n.isGecko = r.indexOf("gecko") > -1 && r.indexOf("safari") == -1; n.isWebKit = r.indexOf("applewebkit/") > -1; var i = /#(.+)$/, s = /^(light|shadow)box\[(.*?)\]/i, o = /\s*([a-z_]*?)\s*=\s*(.+)\s*/, u = /[0-9a-z]+$/i, a = /(.+\/)shadowbox\.js/i; var f = false, l = false, c = {}, h = 0, p, d; n.current = -1; n.dimensions = null; n.ease = function (e) { return 1 + Math.pow(e - 1, 3) }; n.errorInfo = { fla: { name: "Flash", url: "http://www.adobe.com/products/flashplayer/" }, qt: { name: "QuickTime", url: "http://www.apple.com/quicktime/download/" }, wmp: { name: "Windows Media Player", url: "http://www.microsoft.com/windows/windowsmedia/" }, f4m: { name: "Flip4Mac", url: "http://www.flip4mac.com/wmv_download.htm" } }; n.gallery = []; n.onReady = C; n.path = null; n.player = null; n.playerId = "sb-player"; n.options = { animate: true, animateFade: true, autoplayMovies: true, continuous: false, enableKeys: true, flashParams: { bgcolor: "#000000", allowfullscreen: true }, flashVars: {}, flashVersion: "9.0.115", handleOversize: "resize", handleUnsupported: "link", onChange: C, onClose: C, onFinish: C, onOpen: C, showMovieControls: true, skipSetup: false, slideshowDelay: 0, viewportPadding: 20 }; n.getCurrent = function () { return n.current > -1 ? n.gallery[n.current] : null }; n.hasNext = function () { return n.gallery.length > 1 && (n.current != n.gallery.length - 1 || n.options.continuous) }; n.isOpen = function () { return f }; n.isPaused = function () { return d == "pause" }; n.applyOptions = function (e) { c = x({}, n.options); x(n.options, e) }; n.revertOptions = function () { x(n.options, c) }; n.init = function (e, t) { if (l) { return } l = true; if (n.skin.options) { x(n.options, n.skin.options) } if (e) { x(n.options, e) } if (!n.path) { var r, i = document.getElementsByTagName("script"); for (var s = 0, o = i.length; s < o; ++s) { r = a.exec(i[s].src); if (r) { n.path = r[1]; break } } } if (t) { n.onReady = t } R() }; n.open = function (e) { if (f) { return } var t = n.makeGallery(e); n.gallery = t[0]; n.current = t[1]; e = n.getCurrent(); if (e == null) { return } n.applyOptions(e.options || {}); v(); if (n.gallery.length) { e = n.getCurrent(); if (n.options.onOpen(e) === false) { return } f = true; n.skin.onOpen(e, y) } }; n.close = function () { if (!f) { return } f = false; if (n.player) { n.player.remove(); n.player = null } if (typeof d == "number") { clearTimeout(d); d = null } h = 0; m(false); n.options.onClose(n.getCurrent()); n.skin.onClose(); n.revertOptions() }; n.play = function () { if (!n.hasNext()) { return } if (!h) { h = n.options.slideshowDelay * 1e3 } if (h) { p = S(); d = setTimeout(function () { h = p = 0; n.next() }, h); if (n.skin.onPlay) { n.skin.onPlay() } } }; n.pause = function () { if (typeof d != "number") { return } h = Math.max(0, h - (S() - p)); if (h) { clearTimeout(d); d = "pause"; if (n.skin.onPause) { n.skin.onPause() } } }; n.change = function (e) { if (!(e in n.gallery)) { if (n.options.continuous) { e = e < 0 ? n.gallery.length + e : 0; if (!(e in n.gallery)) { return } } else { return } } n.current = e; if (typeof d == "number") { clearTimeout(d); d = null; h = p = 0 } n.options.onChange(n.getCurrent()); y(true) }; n.next = function () { n.change(n.current + 1) }; n.previous = function () { n.change(n.current - 1) }; n.setDimensions = function (e, t, r, i, s, o, u, a) { var f = e, l = t; var c = 2 * u + s; if (e + c > r) { e = r - c } var h = 2 * u + o; if (t + h > i) { t = i - h } var p = (f - e) / f, d = (l - t) / l, v = p > 0 || d > 0; if (a && v) { if (p > d) { t = Math.round(l / f * e) } else { if (d > p) { e = Math.round(f / l * t) } } } n.dimensions = { height: e + s, width: t + o, innerHeight: e, innerWidth: t, top: Math.floor((r - (e + c)) / 2 + u), left: Math.floor((i - (t + h)) / 2 + u), oversized: v }; return n.dimensions }; n.makeGallery = function (e) { var t = [], r = -1; if (typeof e == "string") { e = [e] } if (typeof e.length == "number") { T(e, function (e, n) { if (n.content) { t[e] = n } else { t[e] = { content: n } } }); r = 0 } else { if (e.tagName) { var i = n.getCache(e); e = i ? i : n.makeObject(e) } if (e.gallery) { t = []; var s; for (var o in n.cache) { s = n.cache[o]; if (s.gallery && s.gallery == e.gallery) { if (r == -1 && s.content == e.content) { r = t.length } t.push(s) } } if (r == -1) { t.unshift(e); r = 0 } } else { t = [e]; r = 0 } } T(t, function (e, n) { t[e] = x({}, n) }); return [t, r] }; n.makeObject = function (e, t) { var r = { content: e.href, title: e.getAttribute("title") || "", link: e }; if (t) { t = x({}, t); T(["player", "title", "height", "width", "gallery"], function (e, n) { if (typeof t[n] != "undefined") { r[n] = t[n]; delete t[n] } }); r.options = t } else { r.options = {} } if (!r.player) { r.player = n.getPlayer(r.content) } var i = e.getAttribute("rel"); if (i) { var u = i.match(s); if (u) { r.gallery = escape(u[2]) } T(i.split(";"), function (e, t) { u = t.match(o); if (u) { r[u[1]] = u[2] } }) } return r }; n.getPlayer = function (e) { if (e.indexOf("#") > -1 && e.indexOf(document.location.href) == 0) { return "inline" } var t = e.indexOf("?"); if (t > -1) { e = e.substring(0, t) } var r, i = e.match(u); if (i) { r = i[0].toLowerCase() } if (r) { if (n.img && n.img.ext.indexOf(r) > -1) { return "img" } if (n.swf && n.swf.ext.indexOf(r) > -1) { return "swf" } if (n.flv && n.flv.ext.indexOf(r) > -1) { return "flv" } if (n.qt && n.qt.ext.indexOf(r) > -1) { if (n.wmp && n.wmp.ext.indexOf(r) > -1) { return "qtwmp" } else { return "qt" } } if (n.wmp && n.wmp.ext.indexOf(r) > -1) { return "wmp" } } return "iframe" }; if (!Array.prototype.indexOf) { Array.prototype.indexOf = function (e, t) { var n = this.length >>> 0; t = t || 0; if (t < 0) { t += n } for (; t < n; ++t) { if (t in this && this[t] === e) { return t } } return -1 } } var A = true, O = true; n.getStyle = function () { var e = /opacity=([^)]*)/, t = document.defaultView && document.defaultView.getComputedStyle; return function (n, r) { var i; if (!A && r == "opacity" && n.currentStyle) { i = e.test(n.currentStyle.filter || "") ? parseFloat(RegExp.$1) / 100 + "" : ""; return i === "" ? "1" : i } if (t) { var s = t(n, null); if (s) { i = s[r] } if (r == "opacity" && i == "") { i = "1" } } else { i = n.currentStyle[r] } return i } }(); n.appendHTML = function (e, t) { if (e.insertAdjacentHTML) { e.insertAdjacentHTML("BeforeEnd", t) } else { if (e.lastChild) { var n = e.ownerDocument.createRange(); n.setStartAfter(e.lastChild); var r = n.createContextualFragment(t); e.appendChild(r) } else { e.innerHTML = t } } }; n.getWindowSize = function (e) { if (document.compatMode === "CSS1Compat") { return document.documentElement["client" + e] } return document.body["client" + e] }; n.setOpacity = function (e, t) { var n = e.style; if (A) { n.opacity = t == 1 ? "" : t } else { n.zoom = 1; if (t == 1) { if (typeof n.filter == "string" && /alpha/i.test(n.filter)) { n.filter = n.filter.replace(/\s*[\w\.]*alpha\([^\)]*\);?/gi, "") } } else { n.filter = (n.filter || "").replace(/\s*[\w\.]*alpha\([^\)]*\)/gi, "") + " alpha(opacity=" + t * 100 + ")" } } }; n.clearOpacity = function (e) { n.setOpacity(e, 1) }; jQuery.fn.shadowbox = function (e) { return this.each(function () { var t = jQuery(this); var n = jQuery.extend({}, e || {}, jQuery.metadata ? t.metadata() : jQuery.meta ? t.data() : {}); var r = this.className || ""; n.width = parseInt((r.match(/w:(\d+)/) || [])[1]) || n.width; n.height = parseInt((r.match(/h:(\d+)/) || [])[1]) || n.height; Shadowbox.setup(t, n) }) }; var F = false, I; if (document.addEventListener) { I = function () { document.removeEventListener("DOMContentLoaded", I, false); n.load() } } else { if (document.attachEvent) { I = function () { if (document.readyState === "complete") { document.detachEvent("onreadystatechange", I); n.load() } } } } n.load = function () { if (F) { return } if (!document.body) { return setTimeout(n.load, 13) } F = true; M(); n.onReady(); if (!n.options.skipSetup) { n.setup() } n.skin.init() }; n.plugins = {}; if (navigator.plugins && navigator.plugins.length) { var U = []; T(navigator.plugins, function (e, t) { U.push(t.name) }); U = U.join(","); var z = U.indexOf("Flip4Mac") > -1; n.plugins = { fla: U.indexOf("Shockwave Flash") > -1, qt: U.indexOf("QuickTime") > -1, wmp: !z && U.indexOf("Windows Media") > -1, f4m: z } } else { var W = function (e) { var t; try { t = new ActiveXObject(e) } catch (n) { } return !!t }; n.plugins = { fla: W("ShockwaveFlash.ShockwaveFlash"), qt: W("QuickTime.QuickTime"), wmp: W("wmplayer.ocx"), f4m: false } } var X = /^(light|shadow)box/i, V = "shadowboxCacheKey", $ = 1; n.cache = {}; n.select = function (e) { var t = []; if (!e) { var r; T(document.getElementsByTagName("a"), function (e, n) { r = n.getAttribute("rel"); if (r && X.test(r)) { t.push(n) } }) } else { var i = e.length; if (i) { if (typeof e == "string") { if (n.find) { t = n.find(e) } } else { if (i == 2 && typeof e[0] == "string" && e[1].nodeType) { if (n.find) { t = n.find(e[0], e[1]) } } else { for (var s = 0; s < i; ++s) { t[s] = e[s] } } } } else { t.push(e) } } return t }; n.setup = function (e, t) { T(n.select(e), function (e, r) { n.addCache(r, t) }) }; n.teardown = function (e) { T(n.select(e), function (e, t) { n.removeCache(t) }) }; n.addCache = function (e, r) { var i = e[V]; if (i == t) { i = $++; e[V] = i; B(e, "click", J) } n.cache[i] = n.makeObject(e, r) }; n.removeCache = function (e) { j(e, "click", J); delete n.cache[e[V]]; e[V] = null }; n.getCache = function (e) { var t = e[V]; return t in n.cache && n.cache[t] }; n.clearCache = function () { for (var e in n.cache) { n.removeCache(n.cache[e].link) } n.cache = {} }; n.find = function () { function p(e) { var t = "", n; for (var r = 0; e[r]; r++) { n = e[r]; if (n.nodeType === 3 || n.nodeType === 4) { t += n.nodeValue } else { if (n.nodeType !== 8) { t += p(n.childNodes) } } } return t } function d(e, t, n, r, i, s) { for (var o = 0, u = r.length; o < u; o++) { var a = r[o]; if (a) { a = a[e]; var f = false; while (a) { if (a.sizcache === n) { f = r[a.sizset]; break } if (a.nodeType === 1 && !s) { a.sizcache = n; a.sizset = o } if (a.nodeName.toLowerCase() === t) { f = a; break } a = a[e] } r[o] = f } } } function v(e, t, n, r, i, s) { for (var u = 0, a = r.length; u < a; u++) { var f = r[u]; if (f) { f = f[e]; var l = false; while (f) { if (f.sizcache === n) { l = r[f.sizset]; break } if (f.nodeType === 1) { if (!s) { f.sizcache = n; f.sizset = u } if (typeof t !== "string") { if (f === t) { l = true; break } } else { if (o.filter(t, [f]).length > 0) { l = f; break } } } f = f[e] } r[u] = l } } } var e = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g, n = 0, r = Object.prototype.toString, i = false, s = true;[0, 0].sort(function () { s = false; return 0 }); var o = function (t, n, i, s) { i = i || []; var f = n = n || document; if (n.nodeType !== 1 && n.nodeType !== 9) { return [] } if (!t || typeof t !== "string") { return i } var c = [], h, p, d, v, b = true, w = g(n), E = t; while ((e.exec(""), h = e.exec(E)) !== null) { E = h[3]; c.push(h[1]); if (h[2]) { v = h[3]; break } } if (c.length > 1 && a.exec(t)) { if (c.length === 2 && u.relative[c[0]]) { p = y(c[0] + c[1], n) } else { p = u.relative[c[0]] ? [n] : o(c.shift(), n); while (c.length) { t = c.shift(); if (u.relative[t]) { t += c.shift() } p = y(t, p) } } } else { if (!s && c.length > 1 && n.nodeType === 9 && !w && u.match.ID.test(c[0]) && !u.match.ID.test(c[c.length - 1])) { var S = o.find(c.shift(), n, w); n = S.expr ? o.filter(S.expr, S.set)[0] : S.set[0] } if (n) { var S = s ? { expr: c.pop(), set: l(s) } : o.find(c.pop(), c.length === 1 && (c[0] === "~" || c[0] === "+") && n.parentNode ? n.parentNode : n, w); p = S.expr ? o.filter(S.expr, S.set) : S.set; if (c.length > 0) { d = l(p) } else { b = false } while (c.length) { var x = c.pop(), T = x; if (!u.relative[x]) { x = "" } else { T = c.pop() } if (T == null) { T = n } u.relative[x](d, T, w) } } else { d = c = [] } } if (!d) { d = p } if (!d) { throw "Syntax error, unrecognized expression: " + (x || t) } if (r.call(d) === "[object Array]") { if (!b) { i.push.apply(i, d) } else { if (n && n.nodeType === 1) { for (var N = 0; d[N] != null; N++) { if (d[N] && (d[N] === true || d[N].nodeType === 1 && m(n, d[N]))) { i.push(p[N]) } } } else { for (var N = 0; d[N] != null; N++) { if (d[N] && d[N].nodeType === 1) { i.push(p[N]) } } } } } else { l(d, i) } if (v) { o(v, f, i, s); o.uniqueSort(i) } return i }; o.uniqueSort = function (e) { if (h) { i = s; e.sort(h); if (i) { for (var t = 1; t < e.length; t++) { if (e[t] === e[t - 1]) { e.splice(t--, 1) } } } } return e }; o.matches = function (e, t) { return o(e, null, null, t) }; o.find = function (e, t, n) { var r, i; if (!e) { return [] } for (var s = 0, o = u.order.length; s < o; s++) { var a = u.order[s], i; if (i = u.leftMatch[a].exec(e)) { var f = i[1]; i.splice(1, 1); if (f.substr(f.length - 1) !== "\\") { i[1] = (i[1] || "").replace(/\\/g, ""); r = u.find[a](i, t, n); if (r != null) { e = e.replace(u.match[a], ""); break } } } } if (!r) { r = t.getElementsByTagName("*") } return { set: r, expr: e } }; o.filter = function (e, n, r, i) { var s = e, o = [], a = n, f, l, c = n && n[0] && g(n[0]); while (e && n.length) { for (var h in u.filter) { if ((f = u.match[h].exec(e)) != null) { var p = u.filter[h], d, v; l = false; if (a === o) { o = [] } if (u.preFilter[h]) { f = u.preFilter[h](f, a, r, o, i, c); if (!f) { l = d = true } else { if (f === true) { continue } } } if (f) { for (var m = 0; (v = a[m]) != null; m++) { if (v) { d = p(v, f, m, a); var y = i ^ !!d; if (r && d != null) { if (y) { l = true } else { a[m] = false } } else { if (y) { o.push(v); l = true } } } } } if (d !== t) { if (!r) { a = o } e = e.replace(u.match[h], ""); if (!l) { return [] } break } } } if (e === s) { if (l == null) { throw "Syntax error, unrecognized expression: " + e } else { break } } s = e } return a }; var u = o.selectors = { order: ["ID", "NAME", "TAG"], match: { ID: /#((?:[\w\u00c0-\uFFFF-]|\\.)+)/, CLASS: /\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/, NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF-]|\\.)+)['"]*\]/, ATTR: /\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\S?=)\s*(['"]*)(.*?)\3|)\s*\]/, TAG: /^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/, CHILD: /:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/, POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^-]|$)/, PSEUDO: /:((?:[\w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]*)((?:\([^\)]+\)|[^\2\(\)]*)+)\2\))?/ }, leftMatch: {}, attrMap: { "class": "className", "for": "htmlFor" }, attrHandle: { href: function (e) { return e.getAttribute("href") } }, relative: { "+": function (e, t) { var n = typeof t === "string", r = n && !/\W/.test(t), i = n && !r; if (r) { t = t.toLowerCase() } for (var s = 0, u = e.length, a; s < u; s++) { if (a = e[s]) { while ((a = a.previousSibling) && a.nodeType !== 1) { } e[s] = i || a && a.nodeName.toLowerCase() === t ? a || false : a === t } } if (i) { o.filter(t, e, true) } }, ">": function (e, t) { var n = typeof t === "string"; if (n && !/\W/.test(t)) { t = t.toLowerCase(); for (var r = 0, i = e.length; r < i; r++) { var s = e[r]; if (s) { var u = s.parentNode; e[r] = u.nodeName.toLowerCase() === t ? u : false } } } else { for (var r = 0, i = e.length; r < i; r++) { var s = e[r]; if (s) { e[r] = n ? s.parentNode : s.parentNode === t } } if (n) { o.filter(t, e, true) } } }, "": function (e, t, r) { var i = n++, s = v; if (typeof t === "string" && !/\W/.test(t)) { var o = t = t.toLowerCase(); s = d } s("parentNode", t, i, e, o, r) }, "~": function (e, t, r) { var i = n++, s = v; if (typeof t === "string" && !/\W/.test(t)) { var o = t = t.toLowerCase(); s = d } s("previousSibling", t, i, e, o, r) } }, find: { ID: function (e, t, n) { if (typeof t.getElementById !== "undefined" && !n) { var r = t.getElementById(e[1]); return r ? [r] : [] } }, NAME: function (e, t) { if (typeof t.getElementsByName !== "undefined") { var n = [], r = t.getElementsByName(e[1]); for (var i = 0, s = r.length; i < s; i++) { if (r[i].getAttribute("name") === e[1]) { n.push(r[i]) } } return n.length === 0 ? null : n } }, TAG: function (e, t) { return t.getElementsByTagName(e[1]) } }, preFilter: { CLASS: function (e, t, n, r, i, s) { e = " " + e[1].replace(/\\/g, "") + " "; if (s) { return e } for (var o = 0, u; (u = t[o]) != null; o++) { if (u) { if (i ^ (u.className && (" " + u.className + " ").replace(/[\t\n]/g, " ").indexOf(e) >= 0)) { if (!n) { r.push(u) } } else { if (n) { t[o] = false } } } } return false }, ID: function (e) { return e[1].replace(/\\/g, "") }, TAG: function (e, t) { return e[1].toLowerCase() }, CHILD: function (e) { if (e[1] === "nth") { var t = /(-?)(\d*)n((?:\+|-)?\d*)/.exec(e[2] === "even" && "2n" || e[2] === "odd" && "2n+1" || !/\D/.test(e[2]) && "0n+" + e[2] || e[2]); e[2] = t[1] + (t[2] || 1) - 0; e[3] = t[3] - 0 } e[0] = n++; return e }, ATTR: function (e, t, n, r, i, s) { var o = e[1].replace(/\\/g, ""); if (!s && u.attrMap[o]) { e[1] = u.attrMap[o] } if (e[2] === "~=") { e[4] = " " + e[4] + " " } return e }, PSEUDO: function (t, n, r, i, s) { if (t[1] === "not") { if ((e.exec(t[3]) || "").length > 1 || /^\w/.test(t[3])) { t[3] = o(t[3], null, null, n) } else { var a = o.filter(t[3], n, r, true ^ s); if (!r) { i.push.apply(i, a) } return false } } else { if (u.match.POS.test(t[0]) || u.match.CHILD.test(t[0])) { return true } } return t }, POS: function (e) { e.unshift(true); return e } }, filters: { enabled: function (e) { return e.disabled === false && e.type !== "hidden" }, disabled: function (e) { return e.disabled === true }, checked: function (e) { return e.checked === true }, selected: function (e) { e.parentNode.selectedIndex; return e.selected === true }, parent: function (e) { return !!e.firstChild }, empty: function (e) { return !e.firstChild }, has: function (e, t, n) { return !!o(n[3], e).length }, header: function (e) { return /h\d/i.test(e.nodeName) }, text: function (e) { return "text" === e.type }, radio: function (e) { return "radio" === e.type }, checkbox: function (e) { return "checkbox" === e.type }, file: function (e) { return "file" === e.type }, password: function (e) { return "password" === e.type }, submit: function (e) { return "submit" === e.type }, image: function (e) { return "image" === e.type }, reset: function (e) { return "reset" === e.type }, button: function (e) { return "button" === e.type || e.nodeName.toLowerCase() === "button" }, input: function (e) { return /input|select|textarea|button/i.test(e.nodeName) } }, setFilters: { first: function (e, t) { return t === 0 }, last: function (e, t, n, r) { return t === r.length - 1 }, even: function (e, t) { return t % 2 === 0 }, odd: function (e, t) { return t % 2 === 1 }, lt: function (e, t, n) { return t < n[3] - 0 }, gt: function (e, t, n) { return t > n[3] - 0 }, nth: function (e, t, n) { return n[3] - 0 === t }, eq: function (e, t, n) { return n[3] - 0 === t } }, filter: { PSEUDO: function (e, t, n, r) { var i = t[1], s = u.filters[i]; if (s) { return s(e, n, t, r) } else { if (i === "contains") { return (e.textContent || e.innerText || p([e]) || "").indexOf(t[3]) >= 0 } else { if (i === "not") { var o = t[3]; for (var n = 0, a = o.length; n < a; n++) { if (o[n] === e) { return false } } return true } else { throw "Syntax error, unrecognized expression: " + i } } } }, CHILD: function (e, t) { var n = t[1], r = e; switch (n) { case "only": case "first": while (r = r.previousSibling) { if (r.nodeType === 1) { return false } } if (n === "first") { return true } r = e; case "last": while (r = r.nextSibling) { if (r.nodeType === 1) { return false } } return true; case "nth": var i = t[2], s = t[3]; if (i === 1 && s === 0) { return true } var o = t[0], u = e.parentNode; if (u && (u.sizcache !== o || !e.nodeIndex)) { var a = 0; for (r = u.firstChild; r; r = r.nextSibling) { if (r.nodeType === 1) { r.nodeIndex = ++a } } u.sizcache = o } var f = e.nodeIndex - s; if (i === 0) { return f === 0 } else { return f % i === 0 && f / i >= 0 } } }, ID: function (e, t) { return e.nodeType === 1 && e.getAttribute("id") === t }, TAG: function (e, t) { return t === "*" && e.nodeType === 1 || e.nodeName.toLowerCase() === t }, CLASS: function (e, t) { return (" " + (e.className || e.getAttribute("class")) + " ").indexOf(t) > -1 }, ATTR: function (e, t) { var n = t[1], r = u.attrHandle[n] ? u.attrHandle[n](e) : e[n] != null ? e[n] : e.getAttribute(n), i = r + "", s = t[2], o = t[4]; return r == null ? s === "!=" : s === "=" ? i === o : s === "*=" ? i.indexOf(o) >= 0 : s === "~=" ? (" " + i + " ").indexOf(o) >= 0 : !o ? i && r !== false : s === "!=" ? i !== o : s === "^=" ? i.indexOf(o) === 0 : s === "$=" ? i.substr(i.length - o.length) === o : s === "|=" ? i === o || i.substr(0, o.length + 1) === o + "-" : false }, POS: function (e, t, n, r) { var i = t[2], s = u.setFilters[i]; if (s) { return s(e, n, t, r) } } } }; var a = u.match.POS; for (var f in u.match) { u.match[f] = new RegExp(u.match[f].source + /(?![^\[]*\])(?![^\(]*\))/.source); u.leftMatch[f] = new RegExp(/(^(?:.|\r|\n)*?)/.source + u.match[f].source) } var l = function (e, t) { e = Array.prototype.slice.call(e, 0); if (t) { t.push.apply(t, e); return t } return e }; try { Array.prototype.slice.call(document.documentElement.childNodes, 0) } catch (c) { l = function (e, t) { var n = t || []; if (r.call(e) === "[object Array]") { Array.prototype.push.apply(n, e) } else { if (typeof e.length === "number") { for (var i = 0, s = e.length; i < s; i++) { n.push(e[i]) } } else { for (var i = 0; e[i]; i++) { n.push(e[i]) } } } return n } } var h; if (document.documentElement.compareDocumentPosition) { h = function (e, t) { if (!e.compareDocumentPosition || !t.compareDocumentPosition) { if (e == t) { i = true } return e.compareDocumentPosition ? -1 : 1 } var n = e.compareDocumentPosition(t) & 4 ? -1 : e === t ? 0 : 1; if (n === 0) { i = true } return n } } else { if ("sourceIndex" in document.documentElement) { h = function (e, t) { if (!e.sourceIndex || !t.sourceIndex) { if (e == t) { i = true } return e.sourceIndex ? -1 : 1 } var n = e.sourceIndex - t.sourceIndex; if (n === 0) { i = true } return n } } else { if (document.createRange) { h = function (e, t) { if (!e.ownerDocument || !t.ownerDocument) { if (e == t) { i = true } return e.ownerDocument ? -1 : 1 } var n = e.ownerDocument.createRange(), r = t.ownerDocument.createRange(); n.setStart(e, 0); n.setEnd(e, 0); r.setStart(t, 0); r.setEnd(t, 0); var s = n.compareBoundaryPoints(Range.START_TO_END, r); if (s === 0) { i = true } return s } } } } (function () { var e = document.createElement("div"), n = "script" + (new Date).getTime(); e.innerHTML = "<a name='" + n + "'/>"; var r = document.documentElement; r.insertBefore(e, r.firstChild); if (document.getElementById(n)) { u.find.ID = function (e, n, r) { if (typeof n.getElementById !== "undefined" && !r) { var i = n.getElementById(e[1]); return i ? i.id === e[1] || typeof i.getAttributeNode !== "undefined" && i.getAttributeNode("id").nodeValue === e[1] ? [i] : t : [] } }; u.filter.ID = function (e, t) { var n = typeof e.getAttributeNode !== "undefined" && e.getAttributeNode("id"); return e.nodeType === 1 && n && n.nodeValue === t } } r.removeChild(e); r = e = null })(); (function () { var e = document.createElement("div"); e.appendChild(document.createComment("")); if (e.getElementsByTagName("*").length > 0) { u.find.TAG = function (e, t) { var n = t.getElementsByTagName(e[1]); if (e[1] === "*") { var r = []; for (var i = 0; n[i]; i++) { if (n[i].nodeType === 1) { r.push(n[i]) } } n = r } return n } } e.innerHTML = "<a href='#'></a>"; if (e.firstChild && typeof e.firstChild.getAttribute !== "undefined" && e.firstChild.getAttribute("href") !== "#") { u.attrHandle.href = function (e) { return e.getAttribute("href", 2) } } e = null })(); if (document.querySelectorAll) { (function () { var e = o, t = document.createElement("div"); t.innerHTML = "<p class='TEST'></p>"; if (t.querySelectorAll && t.querySelectorAll(".TEST").length === 0) { return } o = function (t, n, r, i) { n = n || document; if (!i && n.nodeType === 9 && !g(n)) { try { return l(n.querySelectorAll(t), r) } catch (s) { } } return e(t, n, r, i) }; for (var n in e) { o[n] = e[n] } t = null })() } (function () { var e = document.createElement("div"); e.innerHTML = "<div class='test e'></div><div class='test'></div>"; if (!e.getElementsByClassName || e.getElementsByClassName("e").length === 0) { return } e.lastChild.className = "e"; if (e.getElementsByClassName("e").length === 1) { return } u.order.splice(1, 0, "CLASS"); u.find.CLASS = function (e, t, n) { if (typeof t.getElementsByClassName !== "undefined" && !n) { return t.getElementsByClassName(e[1]) } }; e = null })(); var m = document.compareDocumentPosition ? function (e, t) { return e.compareDocumentPosition(t) & 16 } : function (e, t) { return e !== t && (e.contains ? e.contains(t) : true) }; var g = function (e) { var t = (e ? e.ownerDocument || e : 0).documentElement; return t ? t.nodeName !== "HTML" : false }; var y = function (e, t) { var n = [], r = "", i, s = t.nodeType ? [t] : t; while (i = u.match.PSEUDO.exec(e)) { r += i[0]; e = e.replace(u.match.PSEUDO, "") } e = u.relative[e] ? e + "*" : e; for (var a = 0, f = s.length; a < f; a++) { o(e, s[a], n) } return o.filter(r, n) }; return o }(); n.flash = function () { var n = function () { function T() { if (m.readyState == "complete") { m.parentNode.removeChild(m); N() } } function N() { if (w) { return } if (S.ie && S.win) { var e = F("span"); try { var t = l.getElementsByTagName("body")[0].appendChild(e); t.parentNode.removeChild(t) } catch (n) { return } } w = true; if (g) { clearInterval(g); g = null } var r = h.length; for (var i = 0; i < r; i++) { h[i]() } } function C(e) { if (w) { e() } else { h[h.length] = e } } function k(e) { if (typeof f.addEventListener != r) { f.addEventListener("load", e, false) } else { if (typeof l.addEventListener != r) { l.addEventListener("load", e, false) } else { if (typeof f.attachEvent != r) { I(f, "onload", e) } else { if (typeof f.onload == "function") { var t = f.onload; f.onload = function () { t(); e() } } else { f.onload = e } } } } } function L() { var e = p.length; for (var t = 0; t < e; t++) { var n = p[t].id; if (S.pv[0] > 0) { var r = j(n); if (r) { p[t].width = r.getAttribute("width") ? r.getAttribute("width") : "0"; p[t].height = r.getAttribute("height") ? r.getAttribute("height") : "0"; if (q(p[t].swfVersion)) { if (S.webkit && S.webkit < 312) { A(r) } U(n, true) } else { if (p[t].expressInstall && !E && q("6.0.65") && (S.win || S.mac)) { O(p[t]) } else { M(r) } } } } else { U(n, true) } } } function A(e) { var t = e.getElementsByTagName(i)[0]; if (t) { var n = F("embed"), r = t.attributes; if (r) { var s = r.length; for (var o = 0; o < s; o++) { if (r[o].nodeName == "DATA") { n.setAttribute("src", r[o].nodeValue) } else { n.setAttribute(r[o].nodeName, r[o].nodeValue) } } } var u = t.childNodes; if (u) { var a = u.length; for (var f = 0; f < a; f++) { if (u[f].nodeType == 1 && u[f].nodeName == "PARAM") { n.setAttribute(u[f].getAttribute("name"), u[f].getAttribute("value")) } } } e.parentNode.replaceChild(n, e) } } function O(e) { E = true; var t = j(e.id); if (t) { if (e.altContentId) { var n = j(e.altContentId); if (n) { y = n; b = e.altContentId } } else { y = _(t) } if (!/%$/.test(e.width) && parseInt(e.width, 10) < 310) { e.width = "310" } if (!/%$/.test(e.height) && parseInt(e.height, 10) < 137) { e.height = "137" } l.title = l.title.slice(0, 47) + " - Flash Player Installation"; var r = S.ie && S.win ? "ActiveX" : "PlugIn", i = l.title, s = "MMredirectURL=" + f.location + "&MMplayerType=" + r + "&MMdoctitle=" + i, o = e.id; if (S.ie && S.win && t.readyState != 4) { var u = F("div"); o += "SWFObjectNew"; u.setAttribute("id", o); t.parentNode.insertBefore(u, t); t.style.display = "none"; var c = function () { t.parentNode.removeChild(t) }; I(f, "onload", c) } D({ data: e.expressInstall, id: a, width: e.width, height: e.height }, { flashvars: s }, o) } } function M(e) { if (S.ie && S.win && e.readyState != 4) { var t = F("div"); e.parentNode.insertBefore(t, e); t.parentNode.replaceChild(_(e), t); e.style.display = "none"; var n = function () { e.parentNode.removeChild(e) }; I(f, "onload", n) } else { e.parentNode.replaceChild(_(e), e) } } function _(e) { var t = F("div"); if (S.win && S.ie) { t.innerHTML = e.innerHTML } else { var n = e.getElementsByTagName(i)[0]; if (n) { var r = n.childNodes; if (r) { var s = r.length; for (var o = 0; o < s; o++) { if (!(r[o].nodeType == 1 && r[o].nodeName == "PARAM") && !(r[o].nodeType == 8)) { t.appendChild(r[o].cloneNode(true)) } } } } } return t } function D(e, t, n) { var s, o = j(n); if (o) { if (typeof e.id == r) { e.id = n } if (S.ie && S.win) { var a = ""; for (var f in e) { if (e[f] != Object.prototype[f]) { if (f.toLowerCase() == "data") { t.movie = e[f] } else { if (f.toLowerCase() == "styleclass") { a += ' class="' + e[f] + '"' } else { if (f.toLowerCase() != "classid") { a += " " + f + '="' + e[f] + '"' } } } } } var l = ""; for (var c in t) { if (t[c] != Object.prototype[c]) { l += '<param name="' + c + '" value="' + t[c] + '" />' } } o.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + a + ">" + l + "</object>"; d[d.length] = e.id; s = j(e.id) } else { if (S.webkit && S.webkit < 312) { var h = F("embed"); h.setAttribute("type", u); for (var p in e) { if (e[p] != Object.prototype[p]) { if (p.toLowerCase() == "data") { h.setAttribute("src", e[p]) } else { if (p.toLowerCase() == "styleclass") { h.setAttribute("class", e[p]) } else { if (p.toLowerCase() != "classid") { h.setAttribute(p, e[p]) } } } } } for (var v in t) { if (t[v] != Object.prototype[v]) { if (v.toLowerCase() != "movie") { h.setAttribute(v, t[v]) } } } o.parentNode.replaceChild(h, o); s = h } else { var m = F(i); m.setAttribute("type", u); for (var g in e) { if (e[g] != Object.prototype[g]) { if (g.toLowerCase() == "styleclass") { m.setAttribute("class", e[g]) } else { if (g.toLowerCase() != "classid") { m.setAttribute(g, e[g]) } } } } for (var y in t) { if (t[y] != Object.prototype[y] && y.toLowerCase() != "movie") { P(m, y, t[y]) } } o.parentNode.replaceChild(m, o); s = m } } } return s } function P(e, t, n) { var r = F("param"); r.setAttribute("name", t); r.setAttribute("value", n); e.appendChild(r) } function H(e) { var t = j(e); if (t && (t.nodeName == "OBJECT" || t.nodeName == "EMBED")) { if (S.ie && S.win) { if (t.readyState == 4) { B(e) } else { f.attachEvent("onload", function () { B(e) }) } } else { t.parentNode.removeChild(t) } } } function B(e) { var t = j(e); if (t) { for (var n in t) { if (typeof t[n] == "function") { t[n] = null } } t.parentNode.removeChild(t) } } function j(e) { var t = null; try { t = l.getElementById(e) } catch (n) { } return t } function F(e) { return l.createElement(e) } function I(e, t, n) { e.attachEvent(t, n); v[v.length] = [e, t, n] } function q(e) { var t = S.pv, n = e.split("."); n[0] = parseInt(n[0], 10); n[1] = parseInt(n[1], 10) || 0; n[2] = parseInt(n[2], 10) || 0; return t[0] > n[0] || t[0] == n[0] && t[1] > n[1] || t[0] == n[0] && t[1] == n[1] && t[2] >= n[2] ? true : false } function R(e, t) { if (S.ie && S.mac) { return } var n = l.getElementsByTagName("head")[0], s = F("style"); s.setAttribute("type", "text/css"); s.setAttribute("media", "screen"); if (!(S.ie && S.win) && typeof l.createTextNode != r) { s.appendChild(l.createTextNode(e + " {" + t + "}")) } n.appendChild(s); if (S.ie && S.win && typeof l.styleSheets != r && l.styleSheets.length > 0) { var o = l.styleSheets[l.styleSheets.length - 1]; if (typeof o.addRule == i) { o.addRule(e, t) } } } function U(e, t) { var n = t ? "visible" : "hidden"; if (w && j(e)) { j(e).style.visibility = n } else { R("#" + e, "visibility:" + n) } } function z(e) { var t = /[\\\"<>\.;]/; var n = t.exec(e) != null; return n ? encodeURIComponent(e) : e } var r = "undefined", i = "object", s = "Shockwave Flash", o = "ShockwaveFlash.ShockwaveFlash", u = "application/x-shockwave-flash", a = "SWFObjectExprInst", f = e, l = document, c = navigator, h = [], p = [], d = [], v = [], m, g = null, y = null, b = null, w = false, E = false; var S = function () { var e = typeof l.getElementById != r && typeof l.getElementsByTagName != r && typeof l.createElement != r, t = [0, 0, 0], n = null; if (typeof c.plugins != r && typeof c.plugins[s] == i) { n = c.plugins[s].description; if (n && !(typeof c.mimeTypes != r && c.mimeTypes[u] && !c.mimeTypes[u].enabledPlugin)) { n = n.replace(/^.*\s+(\S+\s+\S+$)/, "$1"); t[0] = parseInt(n.replace(/^(.*)\..*$/, "$1"), 10); t[1] = parseInt(n.replace(/^.*\.(.*)\s.*$/, "$1"), 10); t[2] = /r/.test(n) ? parseInt(n.replace(/^.*r(.*)$/, "$1"), 10) : 0 } } else { if (typeof f.ActiveXObject != r) { var a = null, h = false; try { a = new ActiveXObject(o + ".7") } catch (p) { try { a = new ActiveXObject(o + ".6"); t = [6, 0, 21]; a.AllowScriptAccess = "always" } catch (p) { if (t[0] == 6) { h = true } } if (!h) { try { a = new ActiveXObject(o) } catch (p) { } } } if (!h && a) { try { n = a.GetVariable("$version"); if (n) { n = n.split(" ")[1].split(","); t = [parseInt(n[0], 10), parseInt(n[1], 10), parseInt(n[2], 10)] } } catch (p) { } } } } var d = c.userAgent.toLowerCase(), v = c.platform.toLowerCase(), m = /webkit/.test(d) ? parseFloat(d.replace(/^.*webkit\/(\d+(\.\d+)?).*$/, "$1")) : false, g = false, y = v ? /win/.test(v) : /win/.test(d), b = v ? /mac/.test(v) : /mac/.test(d); return { w3cdom: e, pv: t, webkit: m, ie: g, win: y, mac: b } }(); var x = function () { if (!S.w3cdom) { return } C(L); if (S.ie && S.win) { try { l.write("<script id=__ie_ondomload defer=true src=//:></script>"); m = j("__ie_ondomload"); if (m) { I(m, "onreadystatechange", T) } } catch (e) { } } if (S.webkit && typeof l.readyState != r) { g = setInterval(function () { if (/loaded|complete/.test(l.readyState)) { N() } }, 10) } if (typeof l.addEventListener != r) { l.addEventListener("DOMContentLoaded", N, null) } k(N) }(); var W = function () { if (S.ie && S.win) { e.attachEvent("onunload", function () { var e = v.length; for (var t = 0; t < e; t++) { v[t][0].detachEvent(v[t][1], v[t][2]) } var r = d.length; for (var i = 0; i < r; i++) { H(d[i]) } for (var s in S) { S[s] = null } S = null; for (var o in n) { n[o] = null } n = null }) } }(); return { registerObject: function (e, t, n) { if (!S.w3cdom || !e || !t) { return } var r = {}; r.id = e; r.swfVersion = t; r.expressInstall = n ? n : false; p[p.length] = r; U(e, false) }, getObjectById: function (e) { var t = null; if (S.w3cdom) { var n = j(e); if (n) { var s = n.getElementsByTagName(i)[0]; if (!s || s && typeof n.SetVariable != r) { t = n } else { if (typeof s.SetVariable != r) { t = s } } } } return t }, embedSWF: function (e, t, n, s, o, u, a, f, l) { if (!S.w3cdom || !e || !t || !n || !s || !o) { return } n += ""; s += ""; if (q(o)) { U(t, false); var c = {}; if (l && typeof l === i) { for (var h in l) { if (l[h] != Object.prototype[h]) { c[h] = l[h] } } } c.data = e; c.width = n; c.height = s; var p = {}; if (f && typeof f === i) { for (var d in f) { if (f[d] != Object.prototype[d]) { p[d] = f[d] } } } if (a && typeof a === i) { for (var v in a) { if (a[v] != Object.prototype[v]) { if (typeof p.flashvars != r) { p.flashvars += "&" + v + "=" + a[v] } else { p.flashvars = v + "=" + a[v] } } } } C(function () { D(c, p, t); if (c.id == t) { U(t, true) } }) } else { if (u && !E && q("6.0.65") && (S.win || S.mac)) { E = true; U(t, false); C(function () { var e = {}; e.id = e.altContentId = t; e.width = n; e.height = s; e.expressInstall = u; O(e) }) } } }, getFlashPlayerVersion: function () { return { major: S.pv[0], minor: S.pv[1], release: S.pv[2] } }, hasFlashPlayerVersion: q, createSWF: function (e, n, r) { if (S.w3cdom) { return D(e, n, r) } else { return t } }, removeSWF: function (e) { if (S.w3cdom) { H(e) } }, createCSS: function (e, t) { if (S.w3cdom) { R(e, t) } }, addDomLoadEvent: C, addLoadEvent: k, getQueryParamValue: function (e) { var t = l.location.search || l.location.hash; if (e == null) { return z(t) } if (t) { var n = t.substring(1).split("&"); for (var r = 0; r < n.length; r++) { if (n[r].substring(0, n[r].indexOf("=")) == e) { return z(n[r].substring(n[r].indexOf("=") + 1)) } } } return "" }, expressInstallCallback: function () { if (E && y) { var e = j(a); if (e) { e.parentNode.replaceChild(y, e); if (b) { U(b, true); if (S.ie && S.win) { y.style.display = "block" } } y = null; b = null; E = false } } } } }(); return n }(); n.lang = { code: "en", of: "of", loading: "loading", cancel: "Cancel", next: "Next", previous: "Previous", play: "Play", pause: "Pause", close: "Close", errors: { single: 'You must install the <a href="{0}">{1}</a> browser plugin to view this content.', shared: 'You must install both the <a href="{0}">{1}</a> and <a href="{2}">{3}</a> browser plugins to view this content.', either: 'You must install either the <a href="{0}">{1}</a> or the <a href="{2}">{3}</a> browser plugin to view this content.' } }; var K, Q = "sb-drag-proxy", G, Y, Z; n.img = function (e, t) { this.obj = e; this.id = t; this.ready = false; var n = this; K = new Image; K.onload = function () { n.height = e.height ? parseInt(e.height, 10) : K.height; n.width = e.width ? parseInt(e.width, 10) : K.width; n.ready = true; K.onload = null; K = null }; K.src = e.content }; n.img.ext = ["bmp", "gif", "jpg", "jpeg", "png"]; n.img.prototype = { append: function (e, t) { var r = document.createElement("img"); r.id = this.id; r.src = this.obj.content; r.style.position = "absolute"; var i, s; if (t.oversized && n.options.handleOversize == "resize") { i = t.innerHeight; s = t.innerWidth } else { i = this.height; s = this.width } r.setAttribute("height", i); r.setAttribute("width", s); e.appendChild(r) }, remove: function () { var e = k(this.id); if (e) { L(e) } rt(); if (K) { K.onload = null; K = null } }, onLoad: function () { var e = n.dimensions; if (e.oversized && n.options.handleOversize == "drag") { nt() } }, onWindowResize: function () { var e = n.dimensions; switch (n.options.handleOversize) { case "resize": var t = k(this.id); t.height = e.innerHeight; t.width = e.innerWidth; break; case "drag": if (Z) { var r = parseInt(n.getStyle(Z, "top")), i = parseInt(n.getStyle(Z, "left")); if (r + this.height < e.innerHeight) { Z.style.top = e.innerHeight - this.height + "px" } if (i + this.width < e.innerWidth) { Z.style.left = e.innerWidth - this.width + "px" } tt() } break } } }; n.iframe = function (e, t) { this.obj = e; this.id = t; var n = k("sb-overlay"); this.height = e.height ? parseInt(e.height, 10) : n.offsetHeight; this.width = e.width ? parseInt(e.width, 10) : n.offsetWidth }; n.iframe.prototype = { append: function (e, t) { var r = '<iframe id="' + this.id + '" name="' + this.id + '" height="100%" width="100%" frameborder="0" marginwidth="0" marginheight="0" style="visibility:hidden" onload="this.style.visibility=\'visible\'" scrolling="auto"'; if (n.isIE) { r += ' allowtransparency="true"'; if (n.isIE6) { r += " src=\"javascript:false;document.write('');\"" } } r += "></iframe>"; e.innerHTML = r }, remove: function () { var t = k(this.id); if (t) { L(t); if (n.isGecko) { delete e.frames[this.id] } } }, onLoad: function () { var t = n.isIE ? k(this.id).contentWindow : e.frames[this.id]; t.location.href = this.obj.content } }; n.html = function (e, t) { this.obj = e; this.id = t; this.height = e.height ? parseInt(e.height, 10) : 300; this.width = e.width ? parseInt(e.width, 10) : 500 }; n.html.prototype = { append: function (e, t) { var n = document.createElement("div"); n.id = this.id; n.className = "html"; n.innerHTML = this.obj.content; e.appendChild(n) }, remove: function () { var e = k(this.id); if (e) { L(e) } } }; n.swf = function (e, t) { this.obj = e; this.id = t; this.height = e.height ? parseInt(e.height, 10) : 300; this.width = e.width ? parseInt(e.width, 10) : 300 }; n.swf.ext = ["swf"]; n.swf.prototype = { append: function (e, t) { var r = document.createElement("div"); r.id = this.id; e.appendChild(r); var i = t.innerHeight, s = t.innerWidth, o = this.obj.content, u = n.options.flashVersion, a = n.path + "expressInstall.swf", f = n.options.flashVars, l = n.options.flashParams; n.flash.embedSWF(o, this.id, s, i, u, a, f, l) }, remove: function () { n.flash.expressInstallCallback(); n.flash.removeSWF(this.id) }, onWindowResize: function () { var e = n.dimensions, t = k(this.id); t.height = e.innerHeight; t.width = e.innerWidth } }; var ut = 20; n.flv = function (e, t) { this.obj = e; this.id = t; this.height = e.height ? parseInt(e.height, 10) : 300; if (n.options.showMovieControls) { this.height += ut } this.width = e.width ? parseInt(e.width, 10) : 300 }; n.flv.ext = ["flv", "m4v"]; n.flv.prototype = { append: function (e, t) { var r = document.createElement("div"); r.id = this.id; e.appendChild(r); var i = t.innerHeight, s = t.innerWidth, o = n.path + "player.swf", u = n.options.flashVersion, a = n.path + "expressInstall.swf", f = x({ file: this.obj.content, height: i, width: s, autostart: n.options.autoplayMovies ? "true" : "false", controlbar: n.options.showMovieControls ? "bottom" : "none", backcolor: "0x000000", frontcolor: "0xCCCCCC", lightcolor: "0x557722" }, n.options.flashVars), l = n.options.flashParams; n.flash.embedSWF(o, this.id, s, i, u, a, f, l) }, remove: function () { n.flash.expressInstallCallback(); n.flash.removeSWF(this.id) }, onWindowResize: function () { var e = n.dimensions, t = k(this.id); t.height = e.innerHeight; t.width = e.innerWidth } }; var at = false, ft = [], lt = ["sb-nav-close", "sb-nav-next", "sb-nav-play", "sb-nav-pause", "sb-nav-previous"], ct, ht, pt, dt = true; var kt = {}; kt.markup = '<div id="sb-container"><div id="sb-overlay"></div><div id="sb-wrapper"><div id="sb-info"><div id="sb-info-inner"><div id="sb-counter"></div><div id="sb-nav"><a id="sb-nav-close" title="{close}" onclick="Shadowbox.close()"></a><a id="sb-nav-next" title="{next}" onclick="Shadowbox.next()"></a><a id="sb-nav-play" title="{play}" onclick="Shadowbox.play()"></a><a id="sb-nav-pause" title="{pause}" onclick="Shadowbox.pause()"></a><a id="sb-nav-previous" title="{previous}" onclick="Shadowbox.previous()"></a></div></div></div><div id="sb-title"><div id="sb-title-inner"></div></div><div id="sb-wrapper-inner"><div id="sb-body"><div id="sb-body-inner"></div><div id="sb-loading"><div id="sb-loading-inner"><span>{loading}</span></div></div></div></div></div></div>'; kt.options = { animSequence: "sync", counterLimit: 10, counterType: "default", displayCounter: true, displayNav: true, fadeDuration: .35, initialHeight: 160, initialWidth: 320, modal: false, overlayColor: "#000", overlayOpacity: .5, resizeDuration: .35, showOverlay: true, troubleElements: ["select", "object", "embed", "canvas"] }; kt.init = function () { n.appendHTML(document.body, N(kt.markup, n.lang)); kt.body = k("sb-body-inner"); ct = k("sb-container"); ht = k("sb-overlay"); pt = k("sb-wrapper"); if (!O) { ct.style.position = "absolute" } if (!A) { var t, r, i = /url\("(.*\.png)"\)/; T(lt, function (e, s) { t = k(s); if (t) { r = n.getStyle(t, "backgroundImage").match(i); if (r) { t.style.backgroundImage = "none"; t.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true,src=" + r[1] + ",sizingMethod=scale);" } } }) } var s; B(e, "resize", function () { if (s) { clearTimeout(s); s = null } if (f) { s = setTimeout(kt.onWindowResize, 10) } }) }; kt.onOpen = function (t, r) { dt = false; ct.style.display = "block"; mt(); var i = Ct(n.options.initialHeight, n.options.initialWidth); Tt(i.innerHeight, i.top); Nt(i.width, i.left); if (n.options.showOverlay) { ht.style.backgroundColor = n.options.overlayColor; n.setOpacity(ht, 0); if (!n.options.modal) { B(ht, "click", n.close) } at = true } if (!O) { gt(); B(e, "scroll", gt) } yt(); ct.style.visibility = "visible"; if (at) { vt(ht, "opacity", n.options.overlayOpacity, n.options.fadeDuration, r) } else { r() } }; kt.onLoad = function (e, t) { wt(true); while (kt.body.firstChild) { L(kt.body.firstChild) } xt(e, function () { if (!f) { return } if (!e) { pt.style.visibility = "visible" } Et(t) }) }; kt.onReady = function (e) { if (!f) { return } var t = n.player, r = Ct(t.height, t.width); var i = function () { St(e) }; switch (n.options.animSequence) { case "hw": Tt(r.innerHeight, r.top, true, function () { Nt(r.width, r.left, true, i) }); break; case "wh": Nt(r.width, r.left, true, function () { Tt(r.innerHeight, r.top, true, i) }); break; default: Nt(r.width, r.left, true); Tt(r.innerHeight, r.top, true, i) } }; kt.onShow = function (e) { wt(false, e); dt = true }; kt.onClose = function () { if (!O) { j(e, "scroll", gt) } j(ht, "click", n.close); pt.style.visibility = "hidden"; var t = function () { ct.style.visibility = "hidden"; ct.style.display = "none"; yt(true) }; if (at) { vt(ht, "opacity", 0, n.options.fadeDuration, t) } else { t() } }; kt.onPlay = function () { bt("play", false); bt("pause", true) }; kt.onPause = function () { bt("pause", false); bt("play", true) }; kt.onWindowResize = function () { if (!dt) { return } mt(); var e = n.player, t = Ct(e.height, e.width); Nt(t.width, t.left); Tt(t.innerHeight, t.top); if (e.onWindowResize) { e.onWindowResize() } }; kt.dynamicResize = function (e, t) { n.player.width = e; n.player.height = t; mt(); var r = n.player, i = Ct(r.height, r.width); Nt(i.width, i.left); Tt(i.innerHeight, i.top); if (r.onWindowResize) { r.onWindowResize() } }; n.skin = kt; e.Shadowbox = n })(window)